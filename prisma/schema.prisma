generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model University {
  university_id   Int        @id @default(autoincrement())
  university_name String     @db.VarChar(255)
}

model Colleges {
  college_id    Int         @id @default(autoincrement())
  university_id Int?
  college_name  String      @db.VarChar(255)
  University    University? @relation(fields: [university_id], references: [university_id], onDelete: Cascade, onUpdate: NoAction, map: "Colleges_ibfk_1")

  @@index([university_id], map: "university_id")
}

model FourYearPlan {
  student_key  Int
  datetime_val DateTime @db.DateTime(0)
  content      Json?
  Student      Student  @relation(fields: [student_key], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FourYearPlan_ibfk_1")

  @@id([student_key, datetime_val])
}

model Gen_Ed_Requirements {
  student_key  Int     @id
  requirements Json?
  Student      Student @relation(fields: [student_key], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Gen_Ed_Requirements_ibfk_1")
}

model Major {
  major_id           Int               @id @default(autoincrement())
  university_id      Int?
  name               String            @db.VarChar(255)
  major_requirements String?           @db.Text
  description        String?           @db.VarChar(500)
  University         University?       @relation(fields: [university_id], references: [university_id], onDelete: Cascade, onUpdate: NoAction, map: "Major_ibfk_1")
  Students_Majors    Students_Majors[]

  @@index([university_id], map: "university_id")
}

model Minor {
  minor_id           Int               @id @default(autoincrement())
  university_id      Int?
  name               String            @db.VarChar(255)
  minor_requirements String?           @db.Text
  description        String?           @db.VarChar(500)
  University         University?       @relation(fields: [university_id], references: [university_id], onDelete: Cascade, onUpdate: NoAction, map: "Minor_ibfk_1")
  Students_Minors    Students_Minors[]

  @@index([university_id], map: "university_id")
}

model SchedulePlan {
  student_id   Int
  datetime_val DateTime @db.DateTime(0)
  content      Json?
  Student      Student  @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "SchedulePlan_ibfk_1")

  @@id([student_id, datetime_val])
}

model Student {
  id                  Int                  @id @default(autoincrement())
  university_id       Int?
  password            String               @db.VarChar(255)
  email               String               @unique(map: "email") @db.VarChar(255)
  Fname               String?              @db.VarChar(100)
  Lname               String?              @db.VarChar(100)
  desired_career      String?              @db.VarChar(255)
  grad_date           DateTime?            @db.DateTime(0)
  FourYearPlan        FourYearPlan[]
  Gen_Ed_Requirements Gen_Ed_Requirements?
  SchedulePlan        SchedulePlan[]
  University          University?          @relation(fields: [university_id], references: [university_id], onUpdate: NoAction, map: "Student_ibfk_1")
  Students_Majors     Students_Majors[]
  Students_Minors     Students_Minors[]

  @@index([university_id], map: "university_id")
}

model Students_Majors {
  students_major_id  Int      @id @default(autoincrement())
  student_key        Int?
  major_id           Int?
  major_requirements Json?
  Student            Student? @relation(fields: [student_key], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Students_Majors_ibfk_1")
  Major              Major?   @relation(fields: [major_id], references: [major_id], onDelete: Cascade, onUpdate: NoAction, map: "Students_Majors_ibfk_2")

  @@index([major_id], map: "major_id")
  @@index([student_key], map: "student_key")
}

model Students_Minors {
  students_minor_id  Int      @id @default(autoincrement())
  student_key        Int?
  minor_id           Int?
  major_requirements Json?
  Student            Student? @relation(fields: [student_key], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Students_Minors_ibfk_1")
  Minor              Minor?   @relation(fields: [minor_id], references: [minor_id], onDelete: Cascade, onUpdate: NoAction, map: "Students_Minors_ibfk_2")

  @@index([minor_id], map: "minor_id")
  @@index([student_key], map: "student_key")
}
